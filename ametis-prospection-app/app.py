import streamlit as st
import requests
import time
from fpdf import FPDF
import tempfile
import socket

# Configuration
try:
    DEEPSEEK_API_KEY = st.secrets["DEEPSEEK_API_KEY"]
    APP_PASSWORD = st.secrets.get("APP_PASSWORD", "Ametis2025")
except:
    st.error("Erreur de configuration")
    st.stop()

# Initialisation
st.set_page_config(page_title="Prospection Ametis", layout="centered")
st.markdown("""
<style>
#MainMenu, footer, header {visibility: hidden;}
[data-testid="stToolbar"] {display: none;}
</style>
""", unsafe_allow_html=True)

# Fonction pour v√©rifier la connectivit√© Internet
def check_internet_connection():
    try:
        # Test de connexion √† un serveur DNS fiable
        socket.create_connection(("8.8.8.8", 53), timeout=5)
        return True
    except OSError:
        return False

# Solution de repli locale am√©lior√©e
def generate_fallback_report(company, sector):
    return f"""
# üßê Fiche Prospection: {company}

**Secteur:** {sector}  
**Date de g√©n√©ration:** {time.strftime("%d/%m/%Y")}

## üìå Coordonn√©es
- **Adresse:** Non disponible (erreur API)
- **Site web:** www.{company.replace(' ', '').lower()}.fr
- **T√©l√©phone:** 01 23 45 67 89

## üè¢ Activit√© principale
Entreprise sp√©cialis√©e dans le secteur {sector.lower()}. Description g√©n√©r√©e localement - L'API DeepSeek n'a pas r√©pondu.

## üë• Contacts cl√©s
- **Responsable production:** contact@{company.replace(' ', '').lower()}.fr
- **Responsable qualit√©:** qualite@{company.replace(' ', '').lower()}.fr

## ‚úâÔ∏è Strat√©gie d'approche
Privil√©gier un contact par email avec proposition de d√©monstration gratuite des solutions Ametis:

> Objet: Solution de tra√ßabilit√© pour votre production  
>  
> Bonjour,  
>  
> Nous proposons des solutions innovantes de tra√ßabilit√© sp√©cialement adapt√©es au secteur {sector.lower()}.  
> Pouvons-nous planifier un court √©change la semaine prochaine?  
>  
> Cordialement,  
> [Votre nom]  
> Ametis.eu

## üìä Donn√©es contextuelles
- **Criticit√© du besoin:** √âlev√©e
- **Budget estim√©:** 15 000 - 20 000 ‚Ç¨
- **P√©riode d'achat:** Prochain trimestre
"""

# Interface principale
def main():
    # Authentification
    if 'authenticated' not in st.session_state or not st.session_state.authenticated:
        with st.container():
            st.title("üîí Authentification")
            password = st.text_input("Mot de passe", type="password")
            if st.button("Valider"):
                if password == APP_PASSWORD:
                    st.session_state.authenticated = True
                    st.rerun()
                else:
                    st.error("Acc√®s refus√©")
            st.stop()
    
    # Application principale
    st.title("üßê Assistant Prospection Ametis")
    company = st.text_input("Nom de l'entreprise", "ACTIBIO 53")
    sector = st.selectbox("Secteur", ["Agroalimentaire", "Pharma/Cosm√©tique", "Logistique", "Industrie", "Autre"], index=0)
    
    if st.button("G√©n√©rer la fiche", type="primary"):
        if not company:
            st.warning("Veuillez saisir un nom d'entreprise")
            return
            
        # V√©rification de la connexion Internet
        if not check_internet_connection():
            st.error("Pas de connexion Internet d√©tect√©e. Veuillez v√©rifier votre r√©seau.")
            fiche = generate_fallback_report(company, sector)
            st.session_state.fiche = fiche
            st.markdown(fiche)
            return
            
        # Mode d√©mo - Utilisation directe du fallback
        st.warning("Mode d√©mo activ√© - Utilisation du mod√®le local")
        fiche = generate_fallback_report(company, sector)
        st.session_state.fiche = fiche
        st.markdown(fiche)

    # Export PDF
    if st.session_state.get('fiche'):
        if st.button("üìÑ Exporter en PDF"):
            pdf = FPDF()
            pdf.add_page()
            pdf.set_font("Arial", size=12)
            
            # Ajout du logo en haut √† gauche
            try:
                pdf.image("logo-ametis.png", x=10, y=8, w=30)
            except:
                pass
                
            pdf.ln(20)  # Espace apr√®s le logo
            
            for line in st.session_state.fiche.split('\n'):
                # Ignorer les lignes vides
                if not line.strip():
                    pdf.ln(8)
                    continue
                    
                # Style pour les titres
                if line.startswith("# "):
                    pdf.set_font("Arial", "B", 16)
                    pdf.cell(0, 10, line[2:], ln=True)
                    pdf.set_font("Arial", size=12)
                elif line.startswith("## "):
                    pdf.set_font("Arial", "B", 14)
                    pdf.cell(0, 10, line[3:], ln=True)
                    pdf.set_font("Arial", size=12)
                else:
                    pdf.cell(0, 8, line, ln=True)
            
            with tempfile.NamedTemporaryFile(delete=False) as tmp:
                pdf.output(tmp.name)
                with open(tmp.name, "rb") as f:
                    st.download_button(
                        "T√©l√©charger la fiche PDF",
                        data=f.read(),
                        file_name=f"prospection_{company.replace(' ', '_')[:30]}.pdf",
                        mime="application/pdf"
                    )

if __name__ == "__main__":
    main()
