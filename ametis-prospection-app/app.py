import streamlit as st
import openai
import os
from fpdf import FPDF
import tempfile
import re

# Configuration API OpenAI
openai.api_key = os.getenv("OPENAI_API_KEY")

# Configuration de la page
st.set_page_config(page_title="Assistant Prospection Ametis", layout="centered")

# Masquer le menu d√©veloppeur et autres √©l√©ments Streamlit
st.markdown("""
    <style>
        footer, header {visibility: hidden;}
    </style>
    <script>
        const interval = setInterval(() => {
            const toolbar = window.parent.document.querySelector('[data-testid="stToolbar"]');
            if (toolbar) {
                toolbar.style.display = 'none';
                clearInterval(interval);
            }
        }, 100);
    </script>
""", unsafe_allow_html=True)

st.title("üßê V1.0 Prospection Ametis.eu")
st.markdown("""
Cet assistant vous permet d'obtenir une fiche compl√®te de prospection enrichie √† partir du nom d'une entreprise. Il est conseill√© d'indiquer le nom suivi du numero de son d√©partement ( ex : Actibio 53 )

Chaque fiche inclut‚ÄØ:
- Les coordonn√©es compl√®tes et visuelles (logo + site web)
- Une pr√©sentation synth√©tique de l‚Äôactivit√©
- Les actualit√©s ou signaux faibles de transformation
- Les contacts cl√©s (production, technique, achats, qualit√©)
- Un email de prospection combin√© (production + qualit√©)
- Des donn√©es contextuelles : criticit√© du besoin, profil client, budget estim√©, strat√©gie d‚Äôapproche
- Une carte et suggestions d'entreprises voisines dans un rayon de 50 km
""")

# Mot de passe obligatoire
password = st.text_input("üîí Veuillez entrer le mot de passe pour acc√©der √† l'outil :", type="password")
CORRECT_PASSWORD = os.getenv("AMETIS_PASS", "Ametis2025")

if password != CORRECT_PASSWORD:
    st.warning("Acc√®s restreint ‚Äì veuillez entrer le mot de passe.")
    st.stop()

# Saisie entreprise + secteur
nom_entreprise = st.text_input("Entrez le nom de l'entreprise √† analyser")
secteur_cible = st.selectbox("Choisissez le secteur d'activit√© de l'entreprise :", [
    "Agroalimentaire",
    "Pharmaceutique",
    "Industrie m√©canique",
    "Logistique / Emballage",
    "Cosm√©tique",
    "Autre industrie"
])

# Bouton g√©n√©ration fiche
if st.button("G√©n√©rer la fiche") and nom_entreprise:
    prompt = f"""
Tu es un assistant IA expert en prospection commerciale B2B pour le compte d‚ÄôAmetis.eu, sp√©cialis√© dans :
- la tra√ßabilit√© industrielle,
- les √©tiqueteuses et imprimantes industrielles,
- les consommables (√©tiquettes, rubans transfert thermique),
- l‚Äôint√©gration ERP/WMS et solutions logicielles,
- le mobilier logistique mobile,
- les environnements industriels exigeants.

Le secteur d‚Äôactivit√© de l‚Äôentreprise cible est : **{secteur_cible}**.  
L‚Äôentreprise cible s‚Äôappelle : **{nom_entreprise}**.

Ta mission est de g√©n√©rer une fiche de prospection compl√®te, claire et directement exploitable, en suivant les sections ci-dessous, m√™me si certaines donn√©es doivent √™tre estim√©es ou fictives :

[... conserver ici ton prompt complet habituel, √©tapes 1 √† 10, inchang√©es ...]
    """

    with st.spinner("Recherche en cours et g√©n√©ration de la fiche..."):
        try:
            response = openai.ChatCompletion.create(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": "Tu es un assistant IA sp√©cialis√© en prospection B2B."},
                    {"role": "user", "content": prompt}
                ],
                temperature=0.7,
                max_tokens=3000
            )
            fiche = response["choices"][0]["message"]["content"]
            st.session_state.fiche = fiche
            st.markdown("---")
            st.markdown(f"**Fiche pour : {nom_entreprise}**")
            st.markdown(fiche)

            if "‚úâÔ∏è 7." in fiche:
                start = fiche.find("‚úâÔ∏è 7.")
                email_section = fiche[start:]
                st.download_button("üìã Copier l‚Äôe-mail (en texte)", email_section, file_name="email_prospection.txt")

        except Exception as e:
            st.error(f"Une erreur est survenue : {e}")

# Fonction nettoyage pour PDF
def nettoyer_texte_unicode(texte):
    return re.sub(r'[^\x00-\x7F]+', '', texte)

# Export PDF
if "fiche" in st.session_state and st.session_state.fiche:
    st.markdown("üìÑ **G√©n√©rer la fiche au format PDF**")

    if st.button("üì• T√©l√©charger le PDF"):
        try:
            texte_nettoye = nettoyer_texte_unicode(st.session_state.fiche)

            pdf = FPDF()
            pdf.add_page()
            pdf.set_auto_page_break(auto=True, margin=15)
            pdf.set_font("Arial", size=12)

            for line in texte_nettoye.split('\n'):
                pdf.multi_cell(0, 10, line)

            with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmpfile:
                pdf.output(tmpfile.name)
                tmpfile.seek(0)
                st.download_button(
                    label="üìÑ T√©l√©charger le fichier PDF",
                    data=tmpfile.read(),
                    file_name=f"fiche_prospection_{nom_entreprise.replace(' ', '_')}.pdf",
                    mime="application/pdf"
                )
        except Exception as e:
            st.error(f"Erreur lors de la g√©n√©ration du PDF : {e}")
else:
    st.info("Entrez un nom d'entreprise pour g√©n√©rer une fiche.")
